@page "/editstudyset/{StudysetID}"
@page "/editstudyset"
@using Quixduell.Blazor.Shared.CategoryComponent
@using Quixduell.Blazor.Shared.UserComponent
@using Quixduell.Blazor.Shared.QuestionComponent

@if (FormModel is not null)
{
    <EditForm EditContext="EditContext" OnValidSubmit="ComplexValidate" @onclick="() => {
         if (ValidationMessage is not null)
            {
               ValidationMessage.Clear();
            }
            }">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-3">
            <div class="form-group">
                <label class="form-label" for="ss_name">Name:</label>
                <InputText class="form-control" id="ss_name" @bind-Value="FormModel.Name"></InputText>
                <ValidationMessage For="() => FormModel.Name"></ValidationMessage>
            </div>
            <div class="mt-3 mb-3">
                <CreateEditCategory @bind-Value="FormModel.Category"></CreateEditCategory>
                <ValidationMessage For="() => FormModel.Category"></ValidationMessage>
            </div>
            <div class="from-group">
                <label for="ss_contri" class="form-label">Mitwirkende</label>
                <div id="ss_contri">
                    @if (FormModel.Contributors is not null && FormModel.Contributors.Count > 0)
                    {
                        <label for="ss_contri">Mitwirkende:</label>
                        <label id="ss_contri">@string.Join(",", FormModel.Contributors)</label>
                    }
                    <SelectUnselectUsers @bind-Value="FormModel.Contributors"></SelectUnselectUsers>
                    <ValidationMessage For="() => FormModel.Contributors"></ValidationMessage>
                </div>
            </div>
            <div class="form-group">
                <label for="ss_question" class="form-label">Fragen</label>
                <div id="ss_question">
                    <SelectDeleteQuestionEditForm @bind-Value=_currentQuestion @bind-QuestionForms=FormModel.QuestionFormModels></SelectDeleteQuestionEditForm>
                    <ValidationMessage For="() => FormModel.QuestionFormModels"></ValidationMessage>
                    @if (_currentQuestion is not null)
                    {
                        <div class="modal" tabindex="-1" style="display:block" role="dialog">
                            <div class="modal-dialog modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Frage bearbeiten</h5>
                                    </div>
                                    <div class="modal-body">
                                        <EditQuestion Value=_currentQuestion OnAbort="() => _currentQuestion = null" OnValidSubmit="() => _currentQuestion = null"></EditQuestion>
                                    </div>

                                </div>
                            </div>
                        </div>
                    }
                    <button class="btn btn-secondary" type="button" @onclick="AddQuestion">Frage hinzufügen</button>
                </div>
            </div>
        </div>
        <button class="btn btn-primary" type="submit">Lernset speichern</button>
    </EditForm>
}

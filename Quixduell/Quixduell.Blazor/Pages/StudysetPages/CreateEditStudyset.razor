@page "/editstudyset/{StudysetID}"
@page "/editstudyset"
@using Quixduell.Blazor.Shared.CategoryComponent
@using Quixduell.Blazor.Shared.UserComponent
@using Quixduell.Blazor.Shared.QuestionComponent

@if (FormModel is not null)
{
    <div class="container container-div">
        <EditForm EditContext="EditContext" OnValidSubmit="ComplexValidate" @onclick="() => {
             if (ValidationMessage is not null)
                {
                   ValidationMessage.Clear();
                }
                }">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">

                <div class="form-group">
                    <label class="form-label" for="ss_name">Name:</label>
                    <InputText class="form-control" id="ss_name" @bind-Value="FormModel.Name"></InputText>
                    <ValidationMessage For="() => FormModel.Name"></ValidationMessage>
                </div>

                <div class="mt-3">
                    <CreateEditCategory @bind-Value="FormModel.Category"></CreateEditCategory>
                    <ValidationMessage For="() => FormModel.Category"></ValidationMessage>
                </div>

                <div class="from-group mt-3">

                    <label for="ss_contri" class="form-label">Mitwirkende:</label>

                    <div id="ss_contri">
                        @if (FormModel.Contributors is not null && FormModel.Contributors.Count > 0)
                        {
                            <label for="ss_contri">Hinzugefügt: </label>
                            <label id="ss_contri">@string.Join(", ", FormModel.Contributors)</label>
                        }
                        <SelectUnselectUsers @bind-Value="FormModel.Contributors"></SelectUnselectUsers>
                        <ValidationMessage For="() => FormModel.Contributors"></ValidationMessage>
                    </div>
                </div>

                <div class="form-group mt-3">
                    <label for="ss_question" class="form-label">Fragen:</label>
                    <div id="ss_question">
                        <SelectDeleteQuestionEditForm OnQuestionSelected="ShowQuestionDialog" @bind-QuestionForms=FormModel.QuestionFormModels></SelectDeleteQuestionEditForm>
                        <ValidationMessage For="() => FormModel.QuestionFormModels"></ValidationMessage>
                        <button class="btn btn-secondary mt-2" type="button" @onclick="AddQuestion">Frage hinzufügen</button>
                    </div>
                </div>

            </div>
            <button class="btn btn-primary" type="submit">Lernset speichern</button>
        </EditForm>
    </div>
}
